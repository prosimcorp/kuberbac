//go:build !ignore_autogenerated

/*
Copyright 2024.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/api/rbac/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicClusterRole) DeepCopyInto(out *DynamicClusterRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicClusterRole.
func (in *DynamicClusterRole) DeepCopy() *DynamicClusterRole {
	if in == nil {
		return nil
	}
	out := new(DynamicClusterRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DynamicClusterRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicClusterRoleList) DeepCopyInto(out *DynamicClusterRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DynamicClusterRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicClusterRoleList.
func (in *DynamicClusterRoleList) DeepCopy() *DynamicClusterRoleList {
	if in == nil {
		return nil
	}
	out := new(DynamicClusterRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DynamicClusterRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicClusterRoleSpec) DeepCopyInto(out *DynamicClusterRoleSpec) {
	*out = *in
	out.Synchronization = in.Synchronization
	in.Target.DeepCopyInto(&out.Target)
	if in.Allow != nil {
		in, out := &in.Allow, &out.Allow
		*out = make([]v1.PolicyRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Deny != nil {
		in, out := &in.Deny, &out.Deny
		*out = make([]v1.PolicyRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicClusterRoleSpec.
func (in *DynamicClusterRoleSpec) DeepCopy() *DynamicClusterRoleSpec {
	if in == nil {
		return nil
	}
	out := new(DynamicClusterRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicClusterRoleStatus) DeepCopyInto(out *DynamicClusterRoleStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicClusterRoleStatus.
func (in *DynamicClusterRoleStatus) DeepCopy() *DynamicClusterRoleStatus {
	if in == nil {
		return nil
	}
	out := new(DynamicClusterRoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicRoleBinding) DeepCopyInto(out *DynamicRoleBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicRoleBinding.
func (in *DynamicRoleBinding) DeepCopy() *DynamicRoleBinding {
	if in == nil {
		return nil
	}
	out := new(DynamicRoleBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DynamicRoleBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicRoleBindingList) DeepCopyInto(out *DynamicRoleBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DynamicRoleBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicRoleBindingList.
func (in *DynamicRoleBindingList) DeepCopy() *DynamicRoleBindingList {
	if in == nil {
		return nil
	}
	out := new(DynamicRoleBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DynamicRoleBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicRoleBindingSource) DeepCopyInto(out *DynamicRoleBindingSource) {
	*out = *in
	in.Subject.DeepCopyInto(&out.Subject)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicRoleBindingSource.
func (in *DynamicRoleBindingSource) DeepCopy() *DynamicRoleBindingSource {
	if in == nil {
		return nil
	}
	out := new(DynamicRoleBindingSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicRoleBindingSourceSubject) DeepCopyInto(out *DynamicRoleBindingSourceSubject) {
	*out = *in
	in.MetaSelector.DeepCopyInto(&out.MetaSelector)
	in.NameSelector.DeepCopyInto(&out.NameSelector)
	in.NamespaceSelector.DeepCopyInto(&out.NamespaceSelector)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicRoleBindingSourceSubject.
func (in *DynamicRoleBindingSourceSubject) DeepCopy() *DynamicRoleBindingSourceSubject {
	if in == nil {
		return nil
	}
	out := new(DynamicRoleBindingSourceSubject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicRoleBindingSpec) DeepCopyInto(out *DynamicRoleBindingSpec) {
	*out = *in
	out.Synchronization = in.Synchronization
	in.Source.DeepCopyInto(&out.Source)
	in.Targets.DeepCopyInto(&out.Targets)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicRoleBindingSpec.
func (in *DynamicRoleBindingSpec) DeepCopy() *DynamicRoleBindingSpec {
	if in == nil {
		return nil
	}
	out := new(DynamicRoleBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicRoleBindingStatus) DeepCopyInto(out *DynamicRoleBindingStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicRoleBindingStatus.
func (in *DynamicRoleBindingStatus) DeepCopy() *DynamicRoleBindingStatus {
	if in == nil {
		return nil
	}
	out := new(DynamicRoleBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicRoleBindingTargets) DeepCopyInto(out *DynamicRoleBindingTargets) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.NamespaceSelector.DeepCopyInto(&out.NamespaceSelector)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicRoleBindingTargets.
func (in *DynamicRoleBindingTargets) DeepCopy() *DynamicRoleBindingTargets {
	if in == nil {
		return nil
	}
	out := new(DynamicRoleBindingTargets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRegexT) DeepCopyInto(out *MatchRegexT) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRegexT.
func (in *MatchRegexT) DeepCopy() *MatchRegexT {
	if in == nil {
		return nil
	}
	out := new(MatchRegexT)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetaSelectorT) DeepCopyInto(out *MetaSelectorT) {
	*out = *in
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetaSelectorT.
func (in *MetaSelectorT) DeepCopy() *MetaSelectorT {
	if in == nil {
		return nil
	}
	out := new(MetaSelectorT)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NameSelectorT) DeepCopyInto(out *NameSelectorT) {
	*out = *in
	if in.MatchList != nil {
		in, out := &in.MatchList, &out.MatchList
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	out.MatchRegex = in.MatchRegex
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NameSelectorT.
func (in *NameSelectorT) DeepCopy() *NameSelectorT {
	if in == nil {
		return nil
	}
	out := new(NameSelectorT)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceSelectorT) DeepCopyInto(out *NamespaceSelectorT) {
	*out = *in
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.MatchList != nil {
		in, out := &in.MatchList, &out.MatchList
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	out.MatchRegex = in.MatchRegex
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceSelectorT.
func (in *NamespaceSelectorT) DeepCopy() *NamespaceSelectorT {
	if in == nil {
		return nil
	}
	out := new(NamespaceSelectorT)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SynchronizationT) DeepCopyInto(out *SynchronizationT) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SynchronizationT.
func (in *SynchronizationT) DeepCopy() *SynchronizationT {
	if in == nil {
		return nil
	}
	out := new(SynchronizationT)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetT) DeepCopyInto(out *TargetT) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetT.
func (in *TargetT) DeepCopy() *TargetT {
	if in == nil {
		return nil
	}
	out := new(TargetT)
	in.DeepCopyInto(out)
	return out
}
